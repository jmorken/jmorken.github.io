<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
  <head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <title></title>
  </head>
  <body>
    #fastest code using numba<br>
    import numpy as np<br>
    from numba import njit<br>
    <br>
    # Given values<br>
    x = 2 * 3 * 5 * 7<br>
    y = 1/2 + 1/3 + 1/5 + 1/7<br>
    equation_lhs = 247 / x<br>
    tolerance = 1e-6<br>
    <br>
    @njit<br>
    def check_values():<br>
    &nbsp;&nbsp;&nbsp; trueCount = 0<br>
    &nbsp;&nbsp;&nbsp; falseCount = 0<br>
    &nbsp;&nbsp;&nbsp; trueListabcde = []<br>
    <br>
    &nbsp;&nbsp;&nbsp; for a in range(1, 100):<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for b in range(1, 100):<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    for c in range(1, 100):<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

    for d in range(1, 100):<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

    e = x - a - b - c - d<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

    equation_rhs = np.sum(np.array([a, b, c, d, e]) / x * np.array([0,
    1, 2, 3, 4]))<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

    if np.abs(equation_lhs - equation_rhs) &lt; tolerance:<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

    trueListabcde.append((a, b, c, d, e))<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

    trueCount += 1<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

    else:<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

    falseCount += 1<br>
    <br>
    &nbsp;&nbsp;&nbsp; return trueCount, falseCount, trueListabcde<br>
    <br>
    trueCount, falseCount, trueListabcde = check_values()<br>
    <br>
    print("trueCount:", trueCount)<br>
    print("falseCount:", falseCount)<br>
    print("Length(trueListabcde):", len(trueListabcde))<br>
    print("First 10 elements of trueListabcde:", trueListabcde[:10])<br>
    <br>
    <br>
    <br>
    <br>
    <br>
    <br>
    <br>
    <br>
    #slower code using numpy<br>
    import numpy as np<br>
    <br>
    # Given values<br>
    x = 2 * 3 * 5 * 7<br>
    y = 1/2 + 1/3 + 1/5 + 1/7<br>
    equation_lhs = 247 / x<br>
    tolerance = 1e-6<br>
    <br>
    trueListabcde = []<br>
    trueCount = 0<br>
    falseCount = 0<br>
    <br>
    for a in range(30, 60):<br>
    &nbsp;&nbsp;&nbsp; for b in range(70, 100):<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for c in range(40, 70):<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    for d in range(1, 100):<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    e = x - a - b - c - d<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    equation_rhs = np.sum(np.array([a, b, c, d, e]) / x * np.array([0,
    1, 2, 3, 4]))<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    if np.abs(equation_lhs - equation_rhs) &lt; tolerance:<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    trueListabcde.append((a, b, c, d, e))<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    trueCount += 1<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    else:<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    falseCount += 1<br>
    <br>
    print("trueCount:", trueCount)<br>
    print("falseCount:", falseCount)<br>
    print("Length(trueListabcde):", len(trueListabcde))<br>
    print("First 10 elements of trueListabcde:", trueListabcde[:10])<br>
    <br>
    <br>
    <br>
    <br>
    <br>
    <br>
    <br>
    <br>
    <br>
    <br>
    #slow code using sympy (for exact rationals)<br>
    from sympy import symbols, Rational<br>
    <br>
    # Given values<br>
    x = 2 * 3 * 5 * 7<br>
    y = Rational(1, 2) + Rational(1, 3) + Rational(1, 5) + Rational(1,
    7)<br>
    <br>
    trueListabcde = []<br>
    trueCount = 0<br>
    falseCount = 0<br>
    <br>
    for a in range(30, 60):<br>
    &nbsp;&nbsp;&nbsp; for b in range(70, 100):<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for c in range(40, 70):<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    for d in range(1, 30):<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    e = x - a - b - c - d<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    equation_lhs = Rational(247, x)<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    equation_rhs = Rational(a, x)*0 + Rational(b, x)*1 + Rational(c,
    x)*2 + Rational(d, x)*3 + Rational(e, x)*4<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    if equation_lhs == equation_rhs == y:<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    trueListabcde.append((a, b, c, d, e))<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    trueCount += 1<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    else:<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    falseCount += 1<br>
    <br>
    print("trueCount:", trueCount)<br>
    print("falseCount:", falseCount)<br>
    print("Length(trueListabcde):", len(trueListabcde))<br>
    print("First 10 elements of trueListabcde:", trueListabcde[:10])<br>
    <br>
    <br>
    <br>
    <br>
    <br>
    <br>
    <br>
  </body>
</html>
